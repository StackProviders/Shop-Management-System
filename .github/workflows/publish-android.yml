name: 'publish-android'

on:
    push:
        tags:
            - 'v*'

jobs:
    publish-android:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4
              with:
                  version: 8

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: pnpm install

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: 'zulu'
                  java-version: '17'

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Install NDK
              run: sdkmanager "ndk;27.0.11902837"

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

            - name: Setup Cargo config for Android
              run: |
                  mkdir -p ~/.cargo
                  cat >> ~/.cargo/config.toml << EOF
                  [target.aarch64-linux-android]
                  ar = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
                  linker = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android34-clang"

                  [target.armv7-linux-androideabi]
                  ar = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
                  linker = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi34-clang"

                  [target.i686-linux-android]
                  ar = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
                  linker = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android34-clang"

                  [target.x86_64-linux-android]
                  ar = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
                  linker = "$ANDROID_HOME/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android34-clang"
                  EOF

            - name: Remove existing Android project if present
              run: rm -rf src-tauri/gen/android

            - name: Initialize Android project
              run: pnpm tauri android init
              env:
                  NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

            - name: Build app bundle
              run: pnpm tauri android build -v
              env:
                  NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
                  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
                  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
                  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
                  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
                  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
                  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
                  VITE_GITHUB_TOKEN: ${{ secrets.VITE_GITHUB_TOKEN }}
                  VITE_EMAIL_API_KEY: ${{ secrets.VITE_EMAIL_API_KEY }}
                  VITE_SMS_API_KEY: ${{ secrets.VITE_SMS_API_KEY }}
                  RANLIB_aarch64_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
                  RANLIB_armv7_linux_androideabi: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
                  RANLIB_i686_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
                  RANLIB_x86_64_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
                  AR_aarch64_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
                  AR_armv7_linux_androideabi: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
                  AR_i686_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
                  AR_x86_64_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
                  CC_aarch64_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android34-clang
                  CC_armv7_linux_androideabi: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi34-clang
                  CC_i686_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android34-clang
                  CC_x86_64_linux_android: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android34-clang

            - name: Extract android signing key from env
              run: |
                  echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" > src-tauri/gen/android/release.jks.base64
                  base64 -d src-tauri/gen/android/release.jks.base64 > src-tauri/gen/android/release.decrypted.jks

            - name: Sign APK
              run: |
                  ${{ env.ANDROID_HOME }}/build-tools/34.0.0/apksigner sign --ks src-tauri/gen/android/release.decrypted.jks \
                    --ks-key-alias ${{ secrets.ANDROID_KEY_ALIAS }} \
                    --ks-pass pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
                    --key-pass pass:${{ secrets.ANDROID_KEY_PASSWORD }} \
                    --out src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk \
                    src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk

            - name: Get package version
              id: package-version
              run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Rename APK file
              run: |
                  mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/Shop.Management.System-${{ steps.package-version.outputs.version}}.apk

            - name: Upload to existing release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ steps.package-version.outputs.version}}
                  files: |
                      ./src-tauri/gen/android/app/build/outputs/apk/universal/release/Shop.Management.System-${{ steps.package-version.outputs.version}}.apk
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

            - name: Download latest.json
              run: |
                  curl -L -o latest.json https://github.com/${{ github.repository }}/releases/download/v${{ steps.package-version.outputs.version}}/latest.json

            - name: Add Android URL to latest.json
              run: |
                  node -e "
                  const fs = require('fs');
                  const data = JSON.parse(fs.readFileSync('latest.json', 'utf8'));
                  data.platforms['android-universal'] = {
                    url: 'https://github.com/${{ github.repository }}/releases/download/v${{ steps.package-version.outputs.version}}/Shop.Management.System-${{ steps.package-version.outputs.version}}.apk'
                  };
                  fs.writeFileSync('latest.json', JSON.stringify(data, null, 2));
                  "

            - name: Upload updated latest.json
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ steps.package-version.outputs.version}}
                  files: latest.json
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
